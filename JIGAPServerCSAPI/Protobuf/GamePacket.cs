// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: GamePacket.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GamePacket.Proto {

  /// <summary>Holder for reflection information generated from GamePacket.proto</summary>
  public static partial class GamePacketReflection {

    #region Descriptor
    /// <summary>File descriptor for GamePacket.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GamePacketReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBHYW1lUGFja2V0LnByb3RvEhBHYW1lUGFja2V0LnByb3RvIjMKE1Npbmd1",
            "cFJlcXVlc3RQYWNrZXQSCgoCaWQYASABKAkSEAoIcGFzc3dvcmQYAiABKAki",
            "YgoSU2luZ3VwQW5zd2VyUGFja2V0EhEKCWlzU3VjY2VzcxgBIAEoCBI5Cg5z",
            "aW5nVXBGYWlsVHlwZRgCIAEoDjIhLkdhbWVQYWNrZXQucHJvdG8uQWNjb3Vu",
            "dEZhaWxUeXBlIjEKEUxvZ2luUmVxdWVzdFBha2V0EgoKAmlkGAEgASgJEhAK",
            "CHBhc3N3b3JkGAIgASgJInIKEUxvZ2luQW5zd2VyUGFja2V0EhEKCWlzU3Vj",
            "Y2VzcxgBIAEoCBI4Cg1sb2dpbkZhaWxUeXBlGAIgASgOMiEuR2FtZVBhY2tl",
            "dC5wcm90by5BY2NvdW50RmFpbFR5cGUSEAoIdW5pcXVlSWQYAyABKAkqYAoK",
            "UGFja2V0VHlwZRITCg9BQ19Mb2dpblJlcXVlc3QQABISCg5BQ19Mb2dpbkFu",
            "c3dlchABEhQKEEFDX1Npbmd1cFJlcXVlc3QQAhITCg9BQ19TaW5ndXBBbnN3",
            "ZXIQAyp/Cg9BY2NvdW50RmFpbFR5cGUSDgoKQUxfRGVmYXVsdBAAEgwKCEFM",
            "X0Vycm9yEAESEgoOTEdfSWRVbmNvcnJlY3QQAhISCg5MR19Qd1VuY29ycmVj",
            "dBADEhQKEExHX0FscmVhZHlPbmxpbmUQBBIQCgxTVV9PdmVybGFwSWQQBWIG",
            "cHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GamePacket.Proto.PacketType), typeof(global::GamePacket.Proto.AccountFailType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GamePacket.Proto.SingupRequestPacket), global::GamePacket.Proto.SingupRequestPacket.Parser, new[]{ "Id", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GamePacket.Proto.SingupAnswerPacket), global::GamePacket.Proto.SingupAnswerPacket.Parser, new[]{ "IsSuccess", "SingUpFailType" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GamePacket.Proto.LoginRequestPaket), global::GamePacket.Proto.LoginRequestPaket.Parser, new[]{ "Id", "Password" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GamePacket.Proto.LoginAnswerPacket), global::GamePacket.Proto.LoginAnswerPacket.Parser, new[]{ "IsSuccess", "LoginFailType", "UniqueId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum PacketType {
    [pbr::OriginalName("AC_LoginRequest")] AcLoginRequest = 0,
    [pbr::OriginalName("AC_LoginAnswer")] AcLoginAnswer = 1,
    [pbr::OriginalName("AC_SingupRequest")] AcSingupRequest = 2,
    [pbr::OriginalName("AC_SingupAnswer")] AcSingupAnswer = 3,
  }

  public enum AccountFailType {
    [pbr::OriginalName("AL_Default")] AlDefault = 0,
    [pbr::OriginalName("AL_Error")] AlError = 1,
    [pbr::OriginalName("LG_IdUncorrect")] LgIdUncorrect = 2,
    [pbr::OriginalName("LG_PwUncorrect")] LgPwUncorrect = 3,
    [pbr::OriginalName("LG_AlreadyOnline")] LgAlreadyOnline = 4,
    [pbr::OriginalName("SU_OverlapId")] SuOverlapId = 5,
  }

  #endregion

  #region Messages
  public sealed partial class SingupRequestPacket : pb::IMessage<SingupRequestPacket> {
    private static readonly pb::MessageParser<SingupRequestPacket> _parser = new pb::MessageParser<SingupRequestPacket>(() => new SingupRequestPacket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingupRequestPacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GamePacket.Proto.GamePacketReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingupRequestPacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingupRequestPacket(SingupRequestPacket other) : this() {
      id_ = other.id_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingupRequestPacket Clone() {
      return new SingupRequestPacket(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingupRequestPacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingupRequestPacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingupRequestPacket other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class SingupAnswerPacket : pb::IMessage<SingupAnswerPacket> {
    private static readonly pb::MessageParser<SingupAnswerPacket> _parser = new pb::MessageParser<SingupAnswerPacket>(() => new SingupAnswerPacket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SingupAnswerPacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GamePacket.Proto.GamePacketReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingupAnswerPacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingupAnswerPacket(SingupAnswerPacket other) : this() {
      isSuccess_ = other.isSuccess_;
      singUpFailType_ = other.singUpFailType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SingupAnswerPacket Clone() {
      return new SingupAnswerPacket(this);
    }

    /// <summary>Field number for the "isSuccess" field.</summary>
    public const int IsSuccessFieldNumber = 1;
    private bool isSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSuccess {
      get { return isSuccess_; }
      set {
        isSuccess_ = value;
      }
    }

    /// <summary>Field number for the "singUpFailType" field.</summary>
    public const int SingUpFailTypeFieldNumber = 2;
    private global::GamePacket.Proto.AccountFailType singUpFailType_ = global::GamePacket.Proto.AccountFailType.AlDefault;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GamePacket.Proto.AccountFailType SingUpFailType {
      get { return singUpFailType_; }
      set {
        singUpFailType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SingupAnswerPacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SingupAnswerPacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSuccess != other.IsSuccess) return false;
      if (SingUpFailType != other.SingUpFailType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSuccess != false) hash ^= IsSuccess.GetHashCode();
      if (SingUpFailType != global::GamePacket.Proto.AccountFailType.AlDefault) hash ^= SingUpFailType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSuccess != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSuccess);
      }
      if (SingUpFailType != global::GamePacket.Proto.AccountFailType.AlDefault) {
        output.WriteRawTag(16);
        output.WriteEnum((int) SingUpFailType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSuccess != false) {
        size += 1 + 1;
      }
      if (SingUpFailType != global::GamePacket.Proto.AccountFailType.AlDefault) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SingUpFailType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SingupAnswerPacket other) {
      if (other == null) {
        return;
      }
      if (other.IsSuccess != false) {
        IsSuccess = other.IsSuccess;
      }
      if (other.SingUpFailType != global::GamePacket.Proto.AccountFailType.AlDefault) {
        SingUpFailType = other.SingUpFailType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSuccess = input.ReadBool();
            break;
          }
          case 16: {
            SingUpFailType = (global::GamePacket.Proto.AccountFailType) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginRequestPaket : pb::IMessage<LoginRequestPaket> {
    private static readonly pb::MessageParser<LoginRequestPaket> _parser = new pb::MessageParser<LoginRequestPaket>(() => new LoginRequestPaket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginRequestPaket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GamePacket.Proto.GamePacketReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequestPaket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequestPaket(LoginRequestPaket other) : this() {
      id_ = other.id_;
      password_ = other.password_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginRequestPaket Clone() {
      return new LoginRequestPaket(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginRequestPaket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginRequestPaket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Password != other.Password) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginRequestPaket other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class LoginAnswerPacket : pb::IMessage<LoginAnswerPacket> {
    private static readonly pb::MessageParser<LoginAnswerPacket> _parser = new pb::MessageParser<LoginAnswerPacket>(() => new LoginAnswerPacket());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LoginAnswerPacket> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GamePacket.Proto.GamePacketReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginAnswerPacket() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginAnswerPacket(LoginAnswerPacket other) : this() {
      isSuccess_ = other.isSuccess_;
      loginFailType_ = other.loginFailType_;
      uniqueId_ = other.uniqueId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LoginAnswerPacket Clone() {
      return new LoginAnswerPacket(this);
    }

    /// <summary>Field number for the "isSuccess" field.</summary>
    public const int IsSuccessFieldNumber = 1;
    private bool isSuccess_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsSuccess {
      get { return isSuccess_; }
      set {
        isSuccess_ = value;
      }
    }

    /// <summary>Field number for the "loginFailType" field.</summary>
    public const int LoginFailTypeFieldNumber = 2;
    private global::GamePacket.Proto.AccountFailType loginFailType_ = global::GamePacket.Proto.AccountFailType.AlDefault;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GamePacket.Proto.AccountFailType LoginFailType {
      get { return loginFailType_; }
      set {
        loginFailType_ = value;
      }
    }

    /// <summary>Field number for the "uniqueId" field.</summary>
    public const int UniqueIdFieldNumber = 3;
    private string uniqueId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string UniqueId {
      get { return uniqueId_; }
      set {
        uniqueId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LoginAnswerPacket);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LoginAnswerPacket other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (IsSuccess != other.IsSuccess) return false;
      if (LoginFailType != other.LoginFailType) return false;
      if (UniqueId != other.UniqueId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (IsSuccess != false) hash ^= IsSuccess.GetHashCode();
      if (LoginFailType != global::GamePacket.Proto.AccountFailType.AlDefault) hash ^= LoginFailType.GetHashCode();
      if (UniqueId.Length != 0) hash ^= UniqueId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (IsSuccess != false) {
        output.WriteRawTag(8);
        output.WriteBool(IsSuccess);
      }
      if (LoginFailType != global::GamePacket.Proto.AccountFailType.AlDefault) {
        output.WriteRawTag(16);
        output.WriteEnum((int) LoginFailType);
      }
      if (UniqueId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(UniqueId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (IsSuccess != false) {
        size += 1 + 1;
      }
      if (LoginFailType != global::GamePacket.Proto.AccountFailType.AlDefault) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LoginFailType);
      }
      if (UniqueId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(UniqueId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LoginAnswerPacket other) {
      if (other == null) {
        return;
      }
      if (other.IsSuccess != false) {
        IsSuccess = other.IsSuccess;
      }
      if (other.LoginFailType != global::GamePacket.Proto.AccountFailType.AlDefault) {
        LoginFailType = other.LoginFailType;
      }
      if (other.UniqueId.Length != 0) {
        UniqueId = other.UniqueId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            IsSuccess = input.ReadBool();
            break;
          }
          case 16: {
            LoginFailType = (global::GamePacket.Proto.AccountFailType) input.ReadEnum();
            break;
          }
          case 26: {
            UniqueId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
